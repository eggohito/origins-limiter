{
	"Origin Limiter (Origin Function Template)": {
		"scope": "mcfunction",
		"prefix": "limiter.origin.function",
		"description": "The template snippet for the function of the origin that would be limited.",
		"body": [
			"#   Set the initial max. player limit for the origin",
			"execute unless score ${1:namespace}:${2:origin} o-l.max = ${1:namespace}:${2:origin} o-l.max run scoreboard players set ${1:namespace}:${2:origin} o-l.max 1",
			"",
			"",
			"#   Count how many players have the origin currently",
			"execute store result score ${1:namespace}:${2:origin} o-l.cur if entity @a[tag = origins-limiter.selection.done, tag = !origins-limiter.ignored, nbt = {cardinal_components: {\"origins:origin\": {OriginLayers: [{Origin: \"${1:namespace}:${2:origin}\"}]}}}]",
			"",
			"",
			"#   If the current count of players that have the origin is greater than the max. player limit for the origin,",
			"#   restrict any future players from choosing the origin. Otherwise, lift the restriction",
			"execute if score ${1:namespace}:${2:origin} o-l.cur >= ${1:namespace}:${2:origin} o-l.max run advancement grant @a only origins-limiter:restrict/origin/${1:namespace}/${2:origin}",
			"",
			"execute if score ${1:namespace}:${2:origin} o-l.cur < ${1:namespace}:${2:origin} o-l.max run advancement revoke @a only origins-limiter:restrict/origin/${1:namespace}/${2:origin}",
			""
		]
	},
	"Origin Limiter (Origin Advancement Template)": {
		"scope": "json",
		"prefix": "limiter.origin.advancement",
		"description": "The template snippet for the advancement of the origin that would be limited.",
		"body": [
			"{",
			"    \"parent\": \"origins-limiter:restrict/layer/${1:namespace}/${2:origin}\",",
			"    \"criteria\": {",
			"        \"dummy\": {",
			"            \"trigger\": \"minecraft:impossible\"",
			"        }",
			"    }",
			"}"
		]
	},
	"Origin Limiter (Layer Template)": {
		"scope": "json",
		"prefix": "limiter.layer",
		"description": "The template snippet for the origin layer where its origin(s) would be limited.",
		"body": [
			"{",
			"    \"order\": ${1:target layer order + 1},",
			"    \"origins\": [",
			"        {",
			"            \"condition\": {",
			"                \"type\": \"origins:advancement\",",
			"                \"advancement\": \"origins-limiter:restrict/layer/${2:namespace}/${3:layer}\",",
			"                \"inverted\": true",
			"            },",
			"            \"origins\": [",
			"                \"origins-limiter:missing_layer\"",
			"            ]",
			"        },",
			"        {",
			"            \"condition\": {",
			"                \"type\": \"origins:advancement\",",
			"                \"advancement\": \"origins-limiter:restrict/layer/${2:namespace}/${3:layer}\"",
			"            },",
			"            \"origins\": [",
			"                \"origins-limiter:cancel\"",
			"            ]",
			"        },",
			"        {",
			"            \"condition\": {",
			"                \"type\": \"origins:and\",",
			"                \"conditions\": [",
			"                    {",
			"                        \"type\": \"origins:advancement\",",
			"                        \"advancement\": \"origins-limiter:restrict/layer/${2:namespace}/${3:layer}\"",
			"                    },",
			"                    {",
			"                        \"type\": \"origins:advancement\",",
			"                        \"advancement\": \"origins-limiter:can_pass\"",
			"                    }",
			"                ]",
			"            },",
			"            \"origins\": [",
			"                \"origins-limiter:pass\"",
			"            ]",
			"        }",
			"    ],",
			"    \"auto_choose\": true,",
			"    \"name\": \"layer.${2:namespace}.${3:layer}.name\",",
			"    \"hidden\": true",
			"}"
		]
	},
	"Origin Limiter (Layer Entry Template)": {
		"scope": "json",
		"prefix": "limiter.layer.entry",
		"description": "The template snippet for registering an origin that would be limited to an origin layer.",
		"body": [
			"{",
			"    \"condition\": {",
			"        \"type\": \"origins:and\",",
			"        \"conditions\": [",
			"            {",
			"                \"type\": \"origins:advancement\",",
			"                \"advancement\": \"origins-limiter:restrict/origin/${1:namespace}/${2:origin}\",",
			"                \"inverted\": true",
			"            },",
			"            {",
			"                \"type\": \"origins:origin\",",
			"                \"origin\": \"${1:namespace}:${2:origin}\",",
			"                \"layer\": \"${3:namespace}:${4:layer}\"",
			"            }",
			"        ]",
			"    },",
			"    \"origins\": [",
			"        \"${1:namespace}:${2:origin}\"",
			"    ]",
			"}"
		]
	},
	"Origin Limiter (Layer Advancement Template)": {
		"scope": "json",
		"prefix": "limiter.layer.advancement",
		"description": "The template snippet for the advancement of the origin layer that would be limited.",
		"body": [
			"{",
			"    \"criteria\": {",
			"        \"exists\": {",
			"            \"trigger\": \"minecraft:impossible\"",
			"        }",
			"    }",
			"}"
		]
	},
	"Origin Limiter (Layer Function Template [Before])": {
		"scope": "mcfunction",
		"prefix": "limiter.layer.function.before",
		"description": "The template snippet for the function of the origin layer that would be limited (after its limited).",
		"body": [
			"#> ${1:this}",
			"#",
			"#   >   Check if the `${2:namespace}:${3:layer}` origin layer exists on the player",
			"#",
			"#   -   This is done to validate whether the origin layer should be restricted or not",
			"#",
			"#@within tag/function origins-limiter:api/restrict/layers/before",
			"",
			"",
			"#   Check if the player has the `${2:namespace}:${3:layer}` origin layer in its NBT",
			"advancement revoke @s from origins-limiter:restrict/layer/${2:namespace}/${3:layer}",
			"",
			"execute if data entity @s cardinal_components.\"origins:origin\".OriginLayers[{Layer: \"${2:namespace}:${3:layer}\"}] run advancement grant @s only origins-limiter:restrict/layer/${2:namespace}/${3:layer}",
			"",
			"",
			"#   Increment the count of origin layers to restrict (for debugging purposes)",
			"execute if entity @s[advancements = {origins-limiter:restrict/layer/${2:namespace}/${3:layer} = true}] run scoreboard players add #layers_to_restrict origins-limiter 1"
		]
	},
	"Origin Limiter (Layer Function Template [After])": {
		"scope": "mcfunction",
		"prefix": "limiter.layer.function.after",
		"description": "The template snippet for the function of the origin layer that would be limited (before it's limited).",
		"body": [
			"#> ${1:this}",
			"#",
			"#   >   Check if the player has cancelled the origin selection in the `${2:namespace}:${3:layer}` origin layer",
			"#",
			"#   -   Cancelled can either mean that the player has deliberately cancelled the process of picking an",
			"#       origin, or that the process of picking an origin was automatically cancelled",
			"#       (because the max player limit for the origin they have chosen has been reached)",
			"#",
			"#@within tag/function origins-limiter:api/restrict/layers/after",
			"",
			"",
			"#   Add a temporary tag if the player has the `origins-limiter:cancel` origin",
			"#   in the `${2:namespace}:${3:layer}` origin layer",
			"execute if data entity @s cardinal_components.\"origins:origin\".OriginLayers[{Origin: \"origins-limiter:cancel\", Layer: \"${2:namespace}:${3:layer}\"}] run tag @s add origins-limiter.cancelled",
			"",
			"",
			"#   Display a message and set the origin of the player in the ${2:namespace}:${3:layer}",
			"#   origin layer to `origins-limiter:empty`",
			"#",
			"#   `origins-limiter:empty` is used in this case to prevent the player from choosing an",
			"#   origin for the `${2:namespace}:${3:layer}` origin layer",
			"execute if entity @s[tag = origins-limiter.cancelled] run tellraw @s {\"text\": \"Origin selection on '${2:namespace}:${3:layer}' origin layer has been cancelled.\", \"color\": \"red\"}",
			"",
			"execute if entity @s[tag = origins-limiter.cancelled] run origin set @s ${2:namespace}:${3:layer} origins-limiter:empty",
			"",
			"",
			"#   Remove the temporary tag afterwards",
			"tag @s remove origins-limiter.cancelled"
		]
	}
}